local library = {}
local windowCount = 0
local sizes = {}
local listOffset = {}
local pastSliders = {}
local dropdowns = {}
local destroyed

local colorPickers = {}

if game.CoreGui:FindFirstChild('MesohicUiLib') then
    game.CoreGui:FindFirstChild('MesohicUiLib'):Destroy()
    destroyed = true
end

local function Lerp(a, b, c)
    return a + ((b - a) * c)
end

local players = game:GetService('Players')
local player = players.LocalPlayer
local mouse = player:GetMouse()
local run = game:GetService('RunService')
local stepped = run.Stepped

local function Dragify(obj)
    spawn(function()
        local initial, isDragging
        obj.InputBegan:Connect(function(input)
            if input.UserInputType == Enum.UserInputType.MouseButton1 then
                isDragging = true
                local minitial = input.Position
                initial = obj.Position
                local con
                con = stepped:Connect(function()
                    if isDragging then
                        local delta = Vector2.new(mouse.X, mouse.Y) - minitial
                        obj.Position = UDim2.new(initial.X.Scale, initial.X.Offset + delta.X, initial.Y.Scale, initial.Y.Offset + delta.Y)
                    else
                        con:Disconnect()
                    end
                end)
                input.Changed:Connect(function()
                    if input.UserInputState == Enum.UserInputState.End then
                        isDragging = false
                    end
                end)
            end
        end)
    end)
end

local function protect_gui(obj) 
    if destroyed then
        obj.Parent = game.CoreGui
        return
    end
    if syn and syn.protect_gui then
        syn.protect_gui(obj)
    end
    obj.Parent = game.CoreGui
end

local MesohicUiLib = Instance.new("ScreenGui")
MesohicUiLib.Name = "MesohicUiLib"
protect_gui(MesohicUiLib)

local xOffset = 20
local uis = game:GetService("UserInputService")
local keybindConnection

local themes = {
    ["Default"] = {
        primary = Color3.fromRGB(0, 151, 230),
        secondary = Color3.fromRGB(0, 168, 255),
        background = Color3.fromRGB(47, 54, 64),
        text = Color3.fromRGB(245, 246, 250)
    },
    ["Dark"] = {
        primary = Color3.fromRGB(0, 0, 0),
        secondary = Color3.fromRGB(30, 30, 30),
        background = Color3.fromRGB(20, 20, 20),
        text = Color3.fromRGB(255, 255, 255)
    },
    ["Light"] = {
        primary = Color3.fromRGB(230, 230, 230),
        secondary = Color3.fromRGB(255, 255, 255),
        background = Color3.fromRGB(245, 246, 250),
        text = Color3.fromRGB(47, 54, 64)
    },
    ["Red"] = {
        primary = Color3.fromRGB(230, 0, 0),
        secondary = Color3.fromRGB(255, 51, 51),
        background = Color3.fromRGB(64, 0, 0),
        text = Color3.fromRGB(250, 250, 250)
    }
}

local currentTheme = themes["Default"]

function library:SetTheme(theme)
    if themes[theme] then
        currentTheme = themes[theme]
    else
        warn("Theme not found! Using default theme.")
        currentTheme = themes["Default"]
    end
end

function library:Destroy()
    MesohicUiLib:Destroy()
    if keybindConnection then
        keybindConnection:Disconnect()
    end
end

function library:Hide()
    MesohicUiLib.Enabled = not MesohicUiLib.Enabled
end	

function library:Keybind(key)
    if keybindConnection then keybindConnection:Disconnect() end
    keybindConnection = uis.InputBegan:Connect(function(input, gp)
        if not gp and input.KeyCode == Enum.KeyCode[key] then
            MesohicUiLib.Enabled = not MesohicUiLib.Enabled
        end
    end)
end

function library:Window(name) 
    windowCount = windowCount + 1
    local winCount = windowCount
    local zindex = winCount * 7
    local UiWindow = Instance.new("Frame")

    UiWindow.Name = "UiWindow"
    UiWindow.Parent = MesohicUiLib
    UiWindow.BackgroundColor3 = currentTheme.primary
    UiWindow.Position = UDim2.new(0, xOffset, 0, 20)
    UiWindow.Size = UDim2.new(0, 207, 0, 33)
    UiWindow.ZIndex = 4 + zindex
    UiWindow.Active = true
    Dragify(UiWindow)

    xOffset = xOffset + 230

    local Header = Instance.new("Frame")
    Header.Name = "Header"
    Header.Parent = UiWindow
    Header.BackgroundColor3 = currentTheme.secondary
    Header.Position = UDim2.new(0, 0, -0.0202544238, 0)
    Header.Size = UDim2.new(0, 207, 0, 26)
    Header.ZIndex = 5 + zindex

    local HeaderText = Instance.new("TextLabel")
    HeaderText.Name = "HeaderText"
    HeaderText.Parent = Header
    HeaderText.BackgroundTransparency = 1.000
    HeaderText.Position = UDim2.new(0, 0, -0.0020698905, 0)
    HeaderText.Size = UDim2.new(0, 206, 0, 33)
    HeaderText.ZIndex = 6 + zindex
    HeaderText.Font = Enum.Font.SourceSans
    HeaderText.Text = name or "Window"
    HeaderText.TextColor3 = currentTheme.text
    HeaderText.TextSize = 17.000

    local Minimise = Instance.new("TextButton")
    local Window = Instance.new("Frame")
    Minimise.Name = "Minimise"
    Minimise.Parent = Header
    Minimise.BackgroundColor3 = currentTheme.secondary
    Minimise.Position = UDim2.new(0, 185, 0, 2)
    Minimise.Size = UDim2.new(0, 22, 0, 22)
    Minimise.ZIndex = 7 + zindex
    Minimise.Font = Enum.Font.SourceSansLight
    Minimise.Text = "_"
    Minimise.TextColor3 = currentTheme.text
    Minimise.TextSize = 20.000
    Minimise.MouseButton1Up:Connect(function()
        Window.Visible = not Window.Visible
        Minimise.Text = Window.Visible and "_" or "+"
    end)

    Window.Name = "Window"
    Window.Parent = Header
    Window.BackgroundColor3 = currentTheme.background
    Window.Position = UDim2.new(0, 0, 0, 0)
    Window.Size = UDim2.new(0, 207, 0, 33)
    Window.ZIndex = 1 + zindex

    local functions = {}
    functions.__index = functions
    functions.Ui = UiWindow

    sizes[winCount] = 33
    listOffset[winCount] = 10

    function functions:Destroy()
        self.Ui:Destroy()
    end

    function functions:Button(name, callback)
        local Button = Instance.new("TextButton")
        listOffset[winCount] = listOffset[winCount] + 32
        Button.Name = "Button"
        Button.Parent = Window
        Button.BackgroundColor3 = currentTheme.background
        Button.Position = UDim2.new(0, 12, 0, listOffset[winCount])
        Button.Size = UDim2.new(0, 182, 0, 26)
        Button.ZIndex = 2 + zindex
        Button.Font = Enum.Font.SourceSans
        Button.TextColor3 = currentTheme.text
        Button.TextSize = 16.000
        Button.Text = name or "Button"
        Button.MouseButton1Down:Connect(callback)
        sizes[winCount] = sizes[winCount] + 32
        Window.Size = UDim2.new(0, 207, 0, sizes[winCount] + 10)
    end

    function functions:Label(text, color)
        local Label = Instance.new("TextLabel")
        Label.Name = "Label"
        Label.Parent = Window
        Label.BackgroundTransparency = 1.000
        Label.Position = UDim2.new(0, 0, 0, listOffset[winCount])
        Label.Size = UDim2.new(0, 206, 0, 29)
        Label.Font = Enum.Font.SourceSans
        Label.Text = text or "Label"
        Label.TextSize = 16.000
        Label.ZIndex = 2 + zindex
        Label.TextColor3 = color or currentTheme.text

        sizes[winCount] = sizes[winCount] + 32
        Window.Size = UDim2.new(0, 207, 0, sizes[winCount] + 10)
        listOffset[winCount] = listOffset[winCount] + 32
        return Label
    end

    function functions:Toggle(text, on, callback)
        local ToggleDescription = Instance.new("TextLabel")
        local ToggleButton = Instance.new("TextButton")
        local ToggleFiller = Instance.new("Frame")

        ToggleDescription.Name = "ToggleDescription"
        ToggleDescription.Parent = Window
        ToggleDescription.BackgroundTransparency = 1.000
        ToggleDescription.Position = UDim2.new(0, 14, 0, listOffset[winCount])
        ToggleDescription.Size = UDim2.new(0, 131, 0, 26)
        ToggleDescription.Font = Enum.Font.SourceSans
        ToggleDescription.Text = text or "Toggle"
        ToggleDescription.TextColor3 = currentTheme.text
        ToggleDescription.TextSize = 16.000
        ToggleDescription.TextXAlignment = Enum.TextXAlignment.Left
        ToggleDescription.ZIndex = 2 + zindex

        ToggleButton.Name = "ToggleButton"
        ToggleButton.Parent = ToggleDescription
        ToggleButton.BackgroundColor3 = currentTheme.background
        ToggleButton.Position = UDim2.new(1.2061069, 0, 0.0769230798, 0)
        ToggleButton.Size = UDim2.new(0, 22, 0, 22)
        ToggleButton.Font = Enum.Font.SourceSans
        ToggleButton.Text = ""
        ToggleButton.ZIndex = 2 + zindex
        ToggleButton.MouseButton1Up:Connect(function()
            ToggleFiller.Visible = not ToggleFiller.Visible
            callback(ToggleFiller.Visible)
        end)

        ToggleFiller.Name = "ToggleFiller"
        ToggleFiller.Parent = ToggleButton
        ToggleFiller.BackgroundColor3 = Color3.fromRGB(68, 189, 50)
        ToggleFiller.Position = UDim2.new(0, 5, 0, 5)
        ToggleFiller.Size = UDim2.new(0, 12, 0, 12)
        ToggleFiller.Visible = on
        ToggleFiller.ZIndex = 2 + zindex

        sizes[winCount] = sizes[winCount] + 32
        Window.Size = UDim2.new(0, 207, 0, sizes[winCount] + 10)
        listOffset[winCount] = listOffset[winCount] + 32
    end

    function functions:Box(text, callback)
        local TextBox = Instance.new("TextBox")
        TextBox.Parent = Window
        TextBox.BackgroundColor3 = currentTheme.background
        TextBox.Position = UDim2.new(0, 99, 0, listOffset[winCount])
        TextBox.Size = UDim2.new(0, 95, 0, 26)
        TextBox.Font = Enum.Font.SourceSans
        TextBox.PlaceholderColor3 = currentTheme.text
        TextBox.PlaceholderText = "..."
        TextBox.TextColor3 = currentTheme.text
        TextBox.TextSize = 16.000
        TextBox.ZIndex = 2 + zindex
        TextBox:GetPropertyChangedSignal('Text'):Connect(function()
            callback(TextBox.Text, false)
        end)

        local BoxDescription = Instance.new("TextLabel")
        BoxDescription.Name = "BoxDescription"
        BoxDescription.Parent = TextBox
        BoxDescription.BackgroundTransparency = 1.000
        BoxDescription.Position = UDim2.new(-0.894736826, 0, 0, 0)
        BoxDescription.Size = UDim2.new(0, 75, 0, 26)
        BoxDescription.Font = Enum.Font.SourceSans
        BoxDescription.Text = text or "Box"
        BoxDescription.TextColor3 = currentTheme.text
        BoxDescription.TextSize = 16.000
        BoxDescription.ZIndex = 2 + zindex

        sizes[winCount] = sizes[winCount] + 32
        Window.Size = UDim2.new(0, 207, 0, sizes[winCount] + 10)
        listOffset[winCount] = listOffset[winCount] + 32
    end

    -- Add other functions (Slider, Dropdown, ColorPicker) similarly...

    return functions
end

return library

